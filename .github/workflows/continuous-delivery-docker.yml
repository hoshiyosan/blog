# This is a basic workflow to help you get started with Actions

name: Docker Continuous Delivery

on:
  workflow_call:
    inputs:
      docker_image_name:
        description: "Name of the image including namespace but without registry"
        type: string
        required: true
      docker_build_context:
        description: "Name of the image including namespace but without registry"
        type: string
        default: "."
      docker_registry:
        description: "Hostname of docker registry where images are published"
        type: string
        default: docker.io
    secrets:
      docker_username:
        description: "Username used to publish image in docker registry"
        required: true
      docker_password:
        description: "Password associated with docker_username"
        required: true
    outputs:
      release_tag:
        description: "Docker tag of delivered image"
        value: ${{ jobs.compute_release_tag.outputs.release_tag }}

jobs:
  compute_release_tag:
    runs-on: ubuntu-latest
    outputs:
      release_tag: ${{ steps.compute_release_tag.outputs.release_tag }}
    steps:
      - id: compute_release_tag
        run: echo "release_tag=$(date +'%Y.%m.%d.%H.%M')" >> $GITHUB_OUTPUT

  build-and-release-docker:
    runs-on: ubuntu-latest
    needs: compute_release_tag

    steps:
      - uses: actions/checkout@v2
      
      - name: Login to docker registry      
        run: echo -n "${{ secrets.docker_password }}" | docker login --username "${{ secrets.docker_username }}" --password-stdin ${{ inputs.docker_registry }}

      # Install QEMU to emulate different architecture (required to use buildx for ARM)
      - name: Set up QEMU
        if: success()
        uses: docker/setup-qemu-action@v1

      # Install docker buildx to build image for multiple architectures
      - name: Docker Setup Buildx
        if: success()
        uses: docker/setup-buildx-action@v1.3.0
        with:
          version: v0.3.0
          
      # Build and publish image for multiple architectures
      - name: Build and publish
        if: success()
        run: docker buildx build --platform linux/amd64,linux/arm64 --output type=image,push=true -t ${{ inputs.docker_registry }}/${{ inputs.docker_image_name }}:${{ needs.compute_release_tag.outputs.release_tag }} ${{ inputs.docker_build_context }}
